{
	"name": "AAD-functions",
	"properties": {
		"description": "Reusable functions for Azure Active Directory",
		"folder": {
			"name": "common"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "small31",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1",
				"spark.autotune.trackingId": "b35a03ad-df1b-4d39-b72d-f8ef56b4346a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/5a5ba4fb-f4e0-4eaf-a2d3-7db71dfd729d/resourceGroups/rg-dataplatform/providers/Microsoft.Synapse/workspaces/ba-synapseanalytics01/bigDataPools/small31",
				"name": "small31",
				"type": "Spark",
				"endpoint": "https://ba-synapseanalytics01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/small31",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Re-usable functions for Azure Active Directory"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run /common/keyvault-functions {\"kvLinkedService\": \"keyvault01\"}"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"tenandIdSecret = \"<Azure Key Vault Secret for TenantID>\"\r\n",
					"servicePrincipalIdSecret = \"<Azure Key Vault Secret for Service Principal ID>\"\r\n",
					"servicePrincipalSecret = \"<Azure Key Vault Secret for Service Principal secret>\"\r\n",
					"authUrl = \"https://login.windows.net\"\r\n",
					"resourceUrl = \"https://database.windows.net/\""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import adal\r\n",
					"\r\n",
					"_tenantId = getSecret(tenandIdSecret)\r\n",
					"_servicePrincipalId = getSecret(servicePrincipalIdSecret)\r\n",
					"_servicePrincipal = getSecret(servicePrincipalSecret)\r\n",
					"_authUrl = authUrl\r\n",
					"_resourceUrl = resourceUrl"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# getBearerToken()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def getBearerToken(tenantId=_tenantId,clientId=_servicePrincipalId, secret=_servicePrincipal, authUrl=_authUrl, resourceUrl=_resourceUrl):\r\n",
					"    ############################################################################\r\n",
					"    # getBearerToken\r\n",
					"    # Returns a bearer token for a service principal AAD authentication\r\n",
					"    #\r\n",
					"    # Parameters:\r\n",
					"    #       tenantId - Tenant ID of Azure Subscription\r\n",
					"    #       clientId - Service Principal ID\r\n",
					"    #       secret   - Service Principal Secret\r\n",
					"    #       authUrl  - Authentication End Point\r\n",
					"    #       resourceUrl - Resource URL\r\n",
					"    #\r\n",
					"    # Returns:\r\n",
					"    #     Bearer Token  \r\n",
					"    ############################################################################\r\n",
					"\r\n",
					"    authority = authUrl + \"/\" + tenantId\r\n",
					"    context = adal.AuthenticationContext(authority)\r\n",
					"    token = context.acquire_token_with_client_credentials(resourceUrl, clientId, secret)\r\n",
					"    accessToken = token[\"accessToken\"]\r\n",
					"    return accessToken"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}