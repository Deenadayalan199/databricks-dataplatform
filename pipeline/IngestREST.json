{
	"name": "IngestREST",
	"properties": {
		"description": "Generic Pipeline to ingest data from any REST API",
		"activities": [
			{
				"name": "Insert IngestInstance - Running",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ELT].[InsertIngestInstance]",
					"storedProcedureParameters": {
						"ADFPipelineRunID": {
							"value": {
								"value": "@if(empty(pipeline().parameters.ADFPipelineRunID),pipeline().RunId,pipeline().parameters.ADFPipelineRunID)",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"DestinationRawFile": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFileSystem": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFileSystem",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFolder": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"IngestID": {
							"value": {
								"value": "@pipeline().parameters.IngestID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ReloadFlag": {
							"value": {
								"value": "@pipeline().parameters.ReloadFlag",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"SourceFileDropFile": {
							"value": null,
							"type": "String"
						},
						"SourceFileDropFileSystem": {
							"value": null,
							"type": "String"
						},
						"SourceFileDropFolder": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ControlDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Source To Datalake Bronze Zone",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Insert IngestInstance - Running",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"value": "@json(pipeline().parameters.DataMapping)",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "REST_API",
						"type": "DatasetReference",
						"parameters": {
							"BaseURL": {
								"value": "@pipeline().parameters.BaseURL",
								"type": "Expression"
							},
							"ServicePrincipalID": {
								"value": "@pipeline().parameters.ServicePrincipalID",
								"type": "Expression"
							},
							"TenantID": {
								"value": "@pipeline().parameters.TenantID",
								"type": "Expression"
							},
							"AADResource": {
								"value": "@pipeline().parameters.AADResource",
								"type": "Expression"
							},
							"RelativeURL": {
								"value": "@pipeline().parameters.SourceSQL",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Bronze_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": {
								"value": "@pipeline().parameters.DestinationRawFileSystem",
								"type": "Expression"
							},
							"Folder": {
								"value": "@pipeline().parameters.DestinationRawFolder",
								"type": "Expression"
							},
							"File": {
								"value": "@pipeline().parameters.DestinationRawFile",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"IngestID": {
				"type": "int"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"StreamName": {
				"type": "string"
			},
			"Backend": {
				"type": "string"
			},
			"EntityName": {
				"type": "string"
			},
			"DeltaName": {
				"type": "string"
			},
			"LastDeltaDate": {
				"type": "string"
			},
			"DataFromTimestamp": {
				"type": "string"
			},
			"DataToTimestamp": {
				"type": "string"
			},
			"LastDeltaNumber": {
				"type": "int"
			},
			"DataFromNumber": {
				"type": "int"
			},
			"DataToNumber": {
				"type": "int"
			},
			"DataFormat": {
				"type": "string"
			},
			"SourceStructure": {
				"type": "string"
			},
			"MaxIntervalMinutes": {
				"type": "int"
			},
			"MaxIntervalNumber": {
				"type": "int"
			},
			"DataMapping": {
				"type": "string"
			},
			"RunSequence": {
				"type": "int"
			},
			"ActiveFlag": {
				"type": "bool"
			},
			"L1TransformationReqdFlag": {
				"type": "string"
			},
			"L2TransformationReqdFlag": {
				"type": "string"
			},
			"DelayL1TransformationFlag": {
				"type": "bool"
			},
			"DelayL2TransformationFlag": {
				"type": "bool"
			},
			"DestinationRawFileSystem": {
				"type": "string"
			},
			"DestinationRawFolder": {
				"type": "string"
			},
			"DestinationRawFile": {
				"type": "string"
			},
			"SourceSQL": {
				"type": "string"
			},
			"StatSQL": {
				"type": "string"
			},
			"ReloadFlag": {
				"type": "bool"
			},
			"ADFPipelineRunID": {
				"type": "string"
			},
			"BaseURL": {
				"type": "string"
			},
			"ServicePrincipalID": {
				"type": "string"
			},
			"TenantID": {
				"type": "string"
			},
			"AADResource": {
				"type": "string"
			}
		},
		"folder": {
			"name": "REST API Pipeline"
		},
		"annotations": []
	}
}