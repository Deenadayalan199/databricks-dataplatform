{
	"name": "Ingest REST",
	"properties": {
		"description": "Generic Pipeline to ingest data from any REST API",
		"activities": [
			{
				"name": "Ingest Running",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set-DestinationRawFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ELT].[InsertIngestInstance]",
					"storedProcedureParameters": {
						"ADFPipelineRunID": {
							"value": {
								"value": "@variables('ADFPipelineRunID')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"DestinationRawFile": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFileSystem": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFileSystem",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFolder": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"IngestID": {
							"value": {
								"value": "@pipeline().parameters.IngestID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ReloadFlag": {
							"value": {
								"value": "@pipeline().parameters.ReloadFlag",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"SourceFileDropFile": {
							"value": null,
							"type": "String"
						},
						"SourceFileDropFileSystem": {
							"value": null,
							"type": "String"
						},
						"SourceFileDropFolder": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ControlDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ADFPipelineRunID",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ADFPipelineRunID",
					"value": {
						"value": "@{if(empty(pipeline().parameters.ADFPipelineRunID),pipeline().RunId,pipeline().parameters.ADFPipelineRunID)}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Ingest Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-RawZone",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ELT].[UpdateIngestInstance]",
					"storedProcedureParameters": {
						"ADFIngestPipelineRunID": {
							"value": {
								"value": "@variables('ADFPipelineRunID')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"DataFromNumber": {
							"value": null,
							"type": "Int32"
						},
						"DataFromTimestamp": {
							"value": null,
							"type": "DateTime"
						},
						"DataToNumber": {
							"value": null,
							"type": "Int32"
						},
						"DataToTimestamp": {
							"value": null,
							"type": "DateTime"
						},
						"IngestCount": {
							"value": {
								"value": "@activity('Copy-RawZone').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"IngestStatus": {
							"value": "Success",
							"type": "String"
						},
						"ReloadFlag": {
							"value": {
								"value": "@pipeline().parameters.ReloadFlag",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"SourceCount": {
							"value": {
								"value": "@activity('Copy-RawZone').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ControlDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Ingest Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-RawZone",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ELT].[UpdateIngestInstance]",
					"storedProcedureParameters": {
						"ADFIngestPipelineRunID": {
							"value": {
								"value": "@variables('ADFPipelineRunID')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"DataFromNumber": {
							"value": null,
							"type": "Int32"
						},
						"DataFromTimestamp": {
							"value": null,
							"type": "DateTime"
						},
						"DataToNumber": {
							"value": null,
							"type": "Int32"
						},
						"DataToTimestamp": {
							"value": null,
							"type": "DateTime"
						},
						"IngestCount": {
							"value": null,
							"type": "Int32"
						},
						"IngestStatus": {
							"value": "Failure",
							"type": "String"
						},
						"ReloadFlag": {
							"value": {
								"value": "@pipeline().parameters.ReloadFlag",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"SourceCount": {
							"value": null,
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ControlDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get L1Transform Definition",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Ingest Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetTransformDefinition_L1]",
						"storedProcedureParameters": {
							"WatermarkDate": {
								"type": "DateTime",
								"value": {
									"value": "@pipeline().parameters.DataFromTimestamp",
									"type": "Expression"
								}
							},
							"IngestID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.IngestID",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get L2Transform Definition",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach L1Transform",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetTransformDefinition_L2]",
						"storedProcedureParameters": {
							"WatermarkDate": {
								"type": "DateTime",
								"value": {
									"value": "@pipeline().parameters.DataFromTimestamp",
									"type": "Expression"
								}
							},
							"IngestID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.IngestID",
									"type": "Expression"
								}
							},
							"InputType": {
								"type": "String",
								"value": "Raw"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach L2Transform",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get L2Transform Definition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get L2Transform Definition').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Insert L2Transform Instance",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[InsertTransformInstance_L2]",
								"storedProcedureParameters": {
									"DataFromNumber": {
										"value": {
											"value": "@item().DataFromNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"DataFromTimestamp": {
										"value": {
											"value": "@item().DataToTimestamp",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"DataToNumber": {
										"value": {
											"value": "@item().DataToNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"DataToTimestamp": {
										"value": {
											"value": "@item().DataToTimestamp",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"WatermarkName": {
										"value": {
											"value": "@item().WatermarkName",
											"type": "Expression"
										},
										"type": "String"
									},
									"IngestADFPipelineRunID": {
										"value": {
											"value": "@variables('ADFPipelineRunID')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestID": {
										"value": {
											"value": "@item().IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InputDWTable": {
										"value": {
											"value": "@item().InputDWTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFile": {
										"value": {
											"value": "@item().InputFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileDelimiter": {
										"value": {
											"value": "@item().InputFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileFolder": {
										"value": {
											"value": "@item().InputFileFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileHeaderFlag": {
										"value": {
											"value": "@item().InputFileHeaderFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									},
									"InputFileSystem": {
										"value": {
											"value": "@item().InputFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"L1TransformADFPipelineRunID": {
										"value": null,
										"type": "Guid"
									},
									"L1TransformID": {
										"value": {
											"value": "@item().L1TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"L2TransformID": {
										"value": {
											"value": "@item().L2TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"LastWatermarkDate": {
										"value": null,
										"type": "DateTime"
									},
									"LastWatermarkNumber": {
										"value": null,
										"type": "Int32"
									},
									"LookupColumns": {
										"value": {
											"value": "@item().LookupColumns",
											"type": "Expression"
										},
										"type": "String"
									},
									"MaxRetries": {
										"value": {
											"value": "@item().MaxRetries",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"NotebookName": {
										"value": {
											"value": "@item().NotebookName",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookPath": {
										"value": {
											"value": "@item().NotebookPath",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWStagingTable": {
										"value": {
											"value": "@item().OutputDWStagingTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTable": {
										"value": {
											"value": "@item().OutputDWTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTableWriteMode": {
										"value": {
											"value": "@item().OutputDWTableWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFile": {
										"value": {
											"value": "@item().OutputL2CuratedFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileDelimiter": {
										"value": {
											"value": "@item().OutputL2CuratedFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileFormat": {
										"value": {
											"value": "@item().OutputL2CuratedFileFormat",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileWriteMode": {
										"value": {
											"value": "@item().OutputL2CuratedFileWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFolder": {
										"value": {
											"value": "@item().OutputL2CuratedFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CurateFileSystem": {
										"value": {
											"value": "@item().OutputL2CurateFileSystem",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "ForEach L1Transform",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get L1Transform Definition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get L1Transform Definition').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Insert L1Transform Instance",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[InsertTransformInstance_L1]",
								"storedProcedureParameters": {
									"IngestADFPipelineRunID": {
										"value": {
											"value": "@variables('ADFPipelineRunID')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestCount": {
										"value": {
											"value": "@activity('Copy-RawZone').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestID": {
										"value": {
											"value": "@item().IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestInstanceID": {
										"value": null,
										"type": "Int32"
									},
									"InputFileHeaderFlag": {
										"value": {
											"value": "@item().InputFileHeaderFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									},
									"InputRawFile": {
										"value": {
											"value": "@variables('_DestinationRawFile')",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileDelimiter": {
										"value": {
											"value": "@item().InputRawFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileFolder": {
										"value": {
											"value": "@pipeline().parameters.DestinationRawFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileSystem": {
										"value": {
											"value": "@pipeline().parameters.DestinationRawFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"L1TransformID": {
										"value": {
											"value": "@item().L1TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"LookupColumns": {
										"value": {
											"value": "@item().LookupColumns",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookName": {
										"value": {
											"value": "@item().NotebookName",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookPath": {
										"value": {
											"value": "@item().NotebookPath",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputEntityName": {
										"value": {
											"value": "@item().OutputEntityName",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputEntityWriteMode": {
										"value": {
											"value": "@item().OutputEntityWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputEntityFolder": {
										"value": {
											"value": "@item().OutputEntityFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputEntityFileSystem": {
										"value": {
											"value": "@item().OutputEntityFileSystem",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Copy-RawZone",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Running",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "REST_Json",
						"type": "DatasetReference",
						"parameters": {
							"EntityName": {
								"value": "@pipeline().parameters.EntityName",
								"type": "Expression"
							},
							"KeyVaultSecretBaseURL": {
								"value": "@pipeline().parameters.KeyVaultSecretBaseURL",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Bronze_JSON",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": {
								"value": "@pipeline().parameters.DestinationRawFileSystem",
								"type": "Expression"
							},
							"Folder": {
								"value": "@pipeline().parameters.DestinationRawFolder",
								"type": "Expression"
							},
							"File": {
								"value": "@variables('_DestinationRawFile')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set-DestinationRawFile",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ADFPipelineRunID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "_DestinationRawFile",
					"value": {
						"value": "@replace(pipeline().parameters.DestinationRawFile,'GUID',variables('ADFPipelineRunID'))",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"IngestID": {
				"type": "int",
				"defaultValue": 7
			},
			"SourceSystemName": {
				"type": "string",
				"defaultValue": "Open Weather API"
			},
			"StreamName": {
				"type": "string",
				"defaultValue": "Daily Weather"
			},
			"Backend": {
				"type": "string",
				"defaultValue": "Rest - Anonymous"
			},
			"EntityName": {
				"type": "string",
				"defaultValue": "http://api.openweathermap.org/data/2.5/weather?q=Sydney&APPID="
			},
			"WatermarkName": {
				"type": "string",
				"defaultValue": "1"
			},
			"LastWatermarkDate": {
				"type": "string",
				"defaultValue": "1"
			},
			"DataFromTimestamp": {
				"type": "string",
				"defaultValue": "1900-01-01 00:00:00.0000000"
			},
			"DataToTimestamp": {
				"type": "string",
				"defaultValue": "2022-10-05 15:12:47.0000000"
			},
			"LastWatermarkNumber": {
				"type": "int",
				"defaultValue": 1
			},
			"DataFromNumber": {
				"type": "int",
				"defaultValue": 1
			},
			"DataToNumber": {
				"type": "int",
				"defaultValue": 1
			},
			"DataFormat": {
				"type": "string",
				"defaultValue": "None"
			},
			"SourceStructure": {
				"type": "string",
				"defaultValue": "None"
			},
			"MaxIntervalMinutes": {
				"type": "int",
				"defaultValue": 1
			},
			"MaxIntervalNumber": {
				"type": "int",
				"defaultValue": 1
			},
			"DataMapping": {
				"type": "string",
				"defaultValue": "None"
			},
			"RunSequence": {
				"type": "int",
				"defaultValue": 100
			},
			"ActiveFlag": {
				"type": "bool",
				"defaultValue": true
			},
			"L1TransformationReqdFlag": {
				"type": "string",
				"defaultValue": "true"
			},
			"L2TransformationReqdFlag": {
				"type": "string",
				"defaultValue": "true"
			},
			"DelayL1TransformationFlag": {
				"type": "bool",
				"defaultValue": true
			},
			"DelayL2TransformationFlag": {
				"type": "bool",
				"defaultValue": true
			},
			"DestinationRawFileSystem": {
				"type": "string",
				"defaultValue": "raw-bronze"
			},
			"DestinationRawFolder": {
				"type": "string",
				"defaultValue": "weather/daily/2022-10"
			},
			"DestinationRawFile": {
				"type": "string",
				"defaultValue": "weather_daily_20221005.json"
			},
			"SourceQuery": {
				"type": "string",
				"defaultValue": "None"
			},
			"StatQuery": {
				"type": "string",
				"defaultValue": "None"
			},
			"ReloadFlag": {
				"type": "bool",
				"defaultValue": true
			},
			"ADFPipelineRunID": {
				"type": "string",
				"defaultValue": "9999"
			},
			"KeyVaultSecretBaseURL": {
				"type": "string",
				"defaultValue": "d7fe1a78534a3f8fa2edce320a06b440"
			}
		},
		"variables": {
			"ADFPipelineRunID": {
				"type": "String"
			},
			"_DestinationRawFile": {
				"type": "String"
			}
		},
		"folder": {
			"name": "REST API Pipelines"
		},
		"annotations": []
	}
}