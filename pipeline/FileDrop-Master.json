{
	"name": "FileDrop-Master",
	"properties": {
		"description": "Generic pipeline for files dropped into Drop Zone",
		"activities": [
			{
				"name": "Get-IngestDefinition-FileDrop",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set-SourceSystemName",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-StreamName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetIngestDefinition_FileDrop]",
						"storedProcedureParameters": {
							"SourceFile": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceFile",
									"type": "Expression"
								}
							},
							"SourceFolder": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceFolder",
									"type": "Expression"
								}
							},
							"SourceSystemName": {
								"type": "String",
								"value": {
									"value": "@variables('varSourceSystemName')",
									"type": "Expression"
								}
							},
							"StreamName": {
								"type": "String",
								"value": {
									"value": "@variables('varStreamName')",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "FileDrop-Ingest",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Get-IngestDefinition-FileDrop",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "FileDrop-Ingest",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Get-L1-Transform",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "FileDrop-Ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetTransformInstance_L1]",
						"storedProcedureParameters": {
							"DelayL1TransformationFlag": {
								"type": "Int32",
								"value": "0"
							},
							"SourceSystemName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemName",
									"type": "Expression"
								}
							},
							"StreamName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.StreamName",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "L1-Transform",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get-L1-Transform",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get-L1-Transform').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Check-L1-Instance-Status",
							"description": "Check the current L1 Instance is not running or completed.",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[ELT].[GetTransformInstance_L1]",
									"storedProcedureParameters": {
										"L1TransformInstanceId": {
											"type": "Int32",
											"value": {
												"value": "@item().L1TransformInstanceID",
												"type": "Expression"
											}
										},
										"SourceSystemName": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.SourceSystemName",
												"type": "Expression"
											}
										},
										"StreamName": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.StreamName",
												"type": "Expression"
											}
										}
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ControlDB_Dataset",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "If-L1-Transform-Pipeline",
							"description": "If Lookup returns a row continue",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Check-L1-Instance-Status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(activity('Check-L1-Instance-Status').output?.firstRow, null)) ",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Generic-L1Transform",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "Generic-L1-Transform",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"L1TransformInstanceID": {
													"value": "@item().L1TransformInstanceID",
													"type": "Expression"
												},
												"L1TransformID": {
													"value": "@item().L1TransformID",
													"type": "Expression"
												},
												"IngestID": {
													"value": "@item().IngestID",
													"type": "Expression"
												},
												"MaxRetries": {
													"value": "@item().MaxRetries",
													"type": "Expression"
												},
												"NotebookName": {
													"value": "@item().NotebookName",
													"type": "Expression"
												},
												"NotebookPath": {
													"value": "@item().NotebookPath",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Set-SourceSystemName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "varSourceSystemName",
					"value": {
						"value": "@{split(pipeline().parameters.SourceFile, '_')[0]}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-StreamName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "varStreamName",
					"value": {
						"value": "@{split(pipeline().parameters.SourceFile, '_')[1]}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"SourceFolder": {
				"type": "string",
				"defaultValue": "RAG/Devices"
			},
			"SourceFile": {
				"type": "string",
				"defaultValue": "Devices.csv"
			},
			"SecretName": {
				"type": "string"
			}
		},
		"variables": {
			"varSourceSystemName": {
				"type": "String"
			},
			"varStreamName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "File Drop"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}