{
	"name": "FileDrop-Ingest",
	"properties": {
		"activities": [
			{
				"name": "Insert-IngestInstance",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set-DestinationRawFile",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-ADFIngestPipelineRunID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ELT].[InsertIngestInstance]",
					"storedProcedureParameters": {
						"ADFPipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"DestinationRawFile": {
							"value": {
								"value": "@variables('_DestinationRawFile')",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFileSystem": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFileSystem",
								"type": "Expression"
							},
							"type": "String"
						},
						"DestinationRawFolder": {
							"value": {
								"value": "@pipeline().parameters.DestinationRawFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"IngestID": {
							"value": {
								"value": "@pipeline().parameters.IngestID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ReloadFlag": {
							"value": {
								"value": "@pipeline().parameters.ReloadFlag",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"SourceFileDropFile": {
							"value": {
								"value": "@pipeline().parameters.SourceFileDropFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceFileDropFileSystem": {
							"value": {
								"value": "@pipeline().parameters.SourceFileDropFileSystem",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceFileDropFolder": {
							"value": {
								"value": "@pipeline().parameters.SourceFileDropFolder",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ControlDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get-TransformDefinition-L1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If TXT or any flat-file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetTransformDefinition_L1]",
						"storedProcedureParameters": {
							"WatermarkDate": {
								"type": "DateTime",
								"value": null
							},
							"IngestID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.IngestID",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get-TransformDefinition-L2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach-TransformDefinition-L1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ELT].[GetTransformDefinition_L2]",
						"storedProcedureParameters": {
							"WatermarkDate": {
								"type": "DateTime",
								"value": null
							},
							"IngestID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.IngestID",
									"type": "Expression"
								}
							},
							"InputType": {
								"type": "String",
								"value": "Raw"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlDB_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set-DestinationRawFile",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "_DestinationRawFile",
					"value": {
						"value": "@replace(pipeline().parameters.DestinationRawFile, 'GUID', pipeline().RunId)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If JSON",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Insert-IngestInstance",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(toLower(pipeline().parameters.DataFormat),'json')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy-JSON-FileDrop-RawZone",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Drop_JSON",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": {
											"value": "@pipeline().parameters.SourceFileDropFileSystem",
											"type": "Expression"
										},
										"Folder": {
											"value": "@pipeline().parameters.SourceFileDropFolder",
											"type": "Expression"
										},
										"File": {
											"value": "@pipeline().parameters.SourceFileDropFile",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Bronze_JSON",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": {
											"value": "@pipeline().parameters.DestinationRawFileSystem",
											"type": "Expression"
										},
										"Folder": {
											"value": "@pipeline().parameters.DestinationRawFolder",
											"type": "Expression"
										},
										"File": {
											"value": "@variables('_DestinationRawFile')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update-Success-IngestInstance-JSON",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-JSON-FileDrop-RawZone",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestInstance]",
								"storedProcedureParameters": {
									"ADFIngestPipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestStatus": {
										"value": "Success",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@if(equals(pipeline().parameters.ReloadFlag,true),1,0)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"SourceCount": {
										"value": {
											"value": "@activity('Copy-JSON-FileDrop-RawZone').output.filesRead",
											"type": "Expression"
										}
									},
									"IngestCount": {
										"value": {
											"value": "@activity('Copy-JSON-FileDrop-RawZone').output.filesWritten",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Failure-IngestInstance-JSON",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-JSON-FileDrop-RawZone",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestInstance]",
								"storedProcedureParameters": {
									"ADFIngestPipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestStatus": {
										"value": "Failure",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@if(equals(pipeline().parameters.ReloadFlag,true),1,0)",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Success-IngestDefinition-JSON",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update-Success-IngestInstance-JSON",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestDefinition]",
								"storedProcedureParameters": {
									"IngestID": {
										"value": {
											"value": "@pipeline().parameters.IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestStatus": {
										"value": "Success",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@pipeline().parameters.ReloadFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Failure-IngestDefinition-JSON",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update-Failure-IngestInstance-JSON",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestDefinition]",
								"storedProcedureParameters": {
									"IngestID": {
										"value": {
											"value": "@pipeline().parameters.IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestStatus": {
										"value": "Failure",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@pipeline().parameters.ReloadFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "If TXT or any flat-file",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Insert-IngestInstance",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(equals(toLower(pipeline().parameters.DataFormat),'txt'),equals(toLower(pipeline().parameters.DataFormat),'csv'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy-DropZone-RawZone-TXT",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"value": "@if(equals(pipeline().parameters.DataMapping, null), null, json(pipeline().parameters.DataMapping))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DropZone_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.SourceFileDropFileSystem",
											"type": "Expression"
										},
										"folder": {
											"value": "@pipeline().parameters.SourceFileDropFolder",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.SourceFileDropFile",
											"type": "Expression"
										},
										"colDelimiter": {
											"value": "@pipeline().parameters.SourceFileDelimiter",
											"type": "Expression"
										},
										"headerFlag": {
											"value": "@pipeline().parameters.SourceFileHeaderFlag",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Bronze_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": {
											"value": "@pipeline().parameters.DestinationRawFileSystem",
											"type": "Expression"
										},
										"Folder": {
											"value": "@pipeline().parameters.DestinationRawFolder",
											"type": "Expression"
										},
										"File": {
											"value": "@variables('_DestinationRawFile')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update-Success-IngestInstance-TXT",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-DropZone-RawZone-TXT",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestInstance]",
								"storedProcedureParameters": {
									"ADFIngestPipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestStatus": {
										"value": "Success",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@if(equals(pipeline().parameters.ReloadFlag,true),1,0)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"SourceCount": {
										"value": {
											"value": "@activity('Copy-DropZone-RawZone-TXT').output.filesRead",
											"type": "Expression"
										}
									},
									"IngestCount": {
										"value": {
											"value": "@activity('Copy-DropZone-RawZone-TXT').output.filesWritten",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Failure-IngestInstance-TXT",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-DropZone-RawZone-TXT",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestInstance]",
								"storedProcedureParameters": {
									"ADFIngestPipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestStatus": {
										"value": "Failure",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@if(equals(pipeline().parameters.ReloadFlag,true),1,0)",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Success-IngestDefinition-TXT",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update-Success-IngestInstance-TXT",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestDefinition]",
								"storedProcedureParameters": {
									"IngestID": {
										"value": {
											"value": "@pipeline().parameters.IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestStatus": {
										"value": "Success",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@pipeline().parameters.ReloadFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update-Failure-IngestDefinition-TXT",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update-Failure-IngestInstance-TXT",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[UpdateIngestDefinition]",
								"storedProcedureParameters": {
									"IngestID": {
										"value": {
											"value": "@pipeline().parameters.IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestStatus": {
										"value": "Failure",
										"type": "String"
									},
									"ReloadFlag": {
										"value": {
											"value": "@pipeline().parameters.ReloadFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Set-ADFIngestPipelineRunID",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "_ADFIngestPipelineRunID",
					"value": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach-TransformDefinition-L1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get-TransformDefinition-L1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get-TransformDefinition-L1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "InsertTransformInstance_L1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[InsertTransformInstance_L1]",
								"storedProcedureParameters": {
									"IngestADFPipelineRunID": {
										"value": {
											"value": "@variables('_ADFIngestPipelineRunID')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestCount": {
										"value": {
											"value": "@if(equals(toLower(pipeline().parameters.DataFormat),'json'),activity('Copy-JSON-FileDrop-RawZone').output.filesRead,activity('Copy-DropZone-RawZone-TXT').output.rowsRead)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestID": {
										"value": {
											"value": "@item().IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IngestInstanceID": {
										"value": null,
										"type": "Int32"
									},
									"InputFileHeaderFlag": {
										"value": {
											"value": "@item().InputFileHeaderFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									},
									"InputRawFile": {
										"value": {
											"value": "@variables('_DestinationRawFile')",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileDelimiter": {
										"value": {
											"value": "@item().InputRawFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileFolder": {
										"value": {
											"value": "@pipeline().parameters.DestinationRawFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputRawFileSystem": {
										"value": {
											"value": "@pipeline().parameters.DestinationRawFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"L1TransformID": {
										"value": {
											"value": "@item().L1TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"LookupColumns": {
										"value": {
											"value": "@item().LookupColumns",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookName": {
										"value": {
											"value": "@item().NotebookName",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookPath": {
										"value": {
											"value": "@item().NotebookPath",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWStagingTable": {
										"value": {
											"value": "@item().OutputDWStagingTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTable": {
										"value": {
											"value": "@item().OutputDWTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTableWriteMode": {
										"value": {
											"value": "@item().OutputDWTableWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CuratedFile": {
										"value": {
											"value": "@replace(item().OutputL1CuratedFile,'GUID', pipeline().RunId)",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CuratedFileDelimiter": {
										"value": {
											"value": "@item().OutputL1CuratedFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CuratedFileFormat": {
										"value": {
											"value": "@item().OutputL1CuratedFileFormat",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CuratedFileWriteMode": {
										"value": {
											"value": "@item().OutputL1CuratedFileWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CuratedFolder": {
										"value": {
											"value": "@item().OutputL1CuratedFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL1CurateFileSystem": {
										"value": {
											"value": "@item().OutputL1CurateFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"CustomParameters": {
										"value": {
											"value": "@item().CustomParameters",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "ForEach-TransformDefinition-L2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get-TransformDefinition-L2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get-TransformDefinition-L2').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Insert-TransformInstance-L2",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ELT].[InsertTransformInstance_L2]",
								"storedProcedureParameters": {
									"DeltaName": {
										"value": {
											"value": "@item().DeltaName",
											"type": "Expression"
										},
										"type": "String"
									},
									"IngestADFPipelineRunID": {
										"value": {
											"value": "@variables('_ADFIngestPipelineRunID')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"IngestID": {
										"value": {
											"value": "@item().IngestID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InputDWTable": {
										"value": {
											"value": "@item().InputDWTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFile": {
										"value": {
											"value": "@variables('_DestinationRawFile')",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileDelimiter": {
										"value": {
											"value": "@item().InputFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileFolder": {
										"value": {
											"value": "@item().InputFileFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"InputFileHeaderFlag": {
										"value": {
											"value": "@item().InputFileHeaderFlag",
											"type": "Expression"
										},
										"type": "Boolean"
									},
									"InputFileSystem": {
										"value": {
											"value": "@item().InputFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"L1TransformID": {
										"value": {
											"value": "@item().L1TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"L2TransformID": {
										"value": {
											"value": "@item().L2TransformID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"LastDeltaDate": {
										"value": {
											"value": "@item().LastDeltaDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"LastDeltaNumber": {
										"value": {
											"value": "@item().LastDeltaNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"LookupColumns": {
										"value": {
											"value": "@item().LookupColumns",
											"type": "Expression"
										},
										"type": "String"
									},
									"MaxRetries": {
										"value": {
											"value": "@item().MaxRetries",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"NotebookName": {
										"value": {
											"value": "@item().NotebookName",
											"type": "Expression"
										},
										"type": "String"
									},
									"NotebookPath": {
										"value": {
											"value": "@item().NotebookPath",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWStagingTable": {
										"value": {
											"value": "@item().OutputDWStagingTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTable": {
										"value": {
											"value": "@item().OutputDWTable",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputDWTableWriteMode": {
										"value": {
											"value": "@item().OutputDWTableWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFile": {
										"value": {
											"value": "@replace(item().OutputL2CuratedFile,'GUID',variables('_ADFIngestPipelineRunID'))",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileDelimiter": {
										"value": {
											"value": "@item().OutputL2CuratedFileDelimiter",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileFormat": {
										"value": {
											"value": "@item().OutputL2CuratedFileFormat",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFileWriteMode": {
										"value": {
											"value": "@item().OutputL2CuratedFileWriteMode",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CuratedFolder": {
										"value": {
											"value": "@item().OutputL2CuratedFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"OutputL2CurateFileSystem": {
										"value": {
											"value": "@item().OutputL2CurateFileSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"CustomParameters": {
										"value": {
											"value": "@item().CustomParameters",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"IngestID": {
				"type": "int"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"StreamName": {
				"type": "string"
			},
			"SourceFileDropFileSystem": {
				"type": "string"
			},
			"SourceFileDropFolder": {
				"type": "string"
			},
			"SourceFileDropFile": {
				"type": "string"
			},
			"DestinationRawFileSystem": {
				"type": "string"
			},
			"DestinationRawFolder": {
				"type": "string"
			},
			"DestinationRawFile": {
				"type": "string"
			},
			"ReloadFlag": {
				"type": "bool"
			},
			"L1TransformationReqdFlag": {
				"type": "bool"
			},
			"L2TransformationReqdFlag": {
				"type": "bool"
			},
			"DataFormat": {
				"type": "string"
			},
			"SourceFileDelimiter": {
				"type": "string"
			},
			"SourceFileHeaderFlag": {
				"type": "bool"
			},
			"DataMapping": {
				"type": "string"
			}
		},
		"variables": {
			"_DestinationRawFile": {
				"type": "String"
			},
			"_ADFIngestPipelineRunID": {
				"type": "String"
			}
		},
		"folder": {
			"name": "File Drop"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}